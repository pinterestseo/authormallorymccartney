---
const { currentPage } = Astro.props;

// Check if current page is homepage
const isHomePage = currentPage === '' || currentPage === '/' || !currentPage;

// Don't render breadcrumbs on homepage
if (isHomePage) {
  return null;
}

const pathSegments = currentPage.split('/').filter(Boolean);
const breadcrumbItems = pathSegments.map((segment, index) => {
  const url = '/' + pathSegments.slice(0, index + 1).join('/');
  return {
    text: decodeURIComponent(segment)
      .charAt(0)
      .toUpperCase() + 
      decodeURIComponent(segment)
      .slice(1)
      .replace(/-/g, ' '),
    url,
    isLast: index === pathSegments.length - 1
  };
});
---

<nav class="breadcrumbs" aria-label="Breadcrumb">
  <ol>
    <li>
      <a href="/" class="home-link">Home</a>
      <span class="separator">/</span>
    </li>
    {
      breadcrumbItems.map((item) => (
        <li>
          {item.isLast ? (
            <span class="current">{item.text}</span>
          ) : (
            <>
              <a href={item.url} class="breadcrumb-link">{item.text}</a>
              <span class="separator">/</span>
            </>
          )}
        </li>
      ))
    }
  </ol>
</nav>

<style>
  .breadcrumbs {
    padding: 1rem 0;
    margin-bottom: 2rem;
  }

  .breadcrumbs ol {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
  }

  .breadcrumbs li {
    display: flex;
    align-items: center;
  }

  .home-link,
  .breadcrumb-link {
    color: #8b5cf6;
    text-decoration: none;
  }

  .separator {
    color: #6b7280;
    margin: 0 0.5rem;
  }

  .current {
    color: #4b5563;
  }

  .home-link:hover,
  .breadcrumb-link:hover {
    text-decoration: underline;
  }
</style>